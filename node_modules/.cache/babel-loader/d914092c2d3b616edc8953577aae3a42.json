{"ast":null,"code":"var _jsxFileName = \"E:\\\\codefield\\\\csc301\\\\visualize_sorter_react\\\\src\\\\component\\\\QuickSort.js\";\nimport React from \"react\"; // react-bootstrap components\n\nimport { Badge, Button, Card, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\n\nfunction QuickSort() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Quick Sort \\u0398(nlogn)\\u21A4(Average)\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Quicksort is a divide-and-conquer algorithm. It works by selecting a 'pivot' element from the array and partitioning the other elements into two sub-arrays, according to whether they are less than or greater than the pivot.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"For this reason, it is sometimes called partition-exchange sort. The sub-arrays are then sorted recursively. This can be done in-place, requiring small additional amounts of memory to perform the sorting.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Pseudo-code:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, `\n        algorithm quicksort(A, lo, hi) is\n        if lo < hi then\n            p := partition(A, lo, hi)\n            quicksort(A, lo, p - 1)\n            quicksort(A, p + 1, hi)\n\n        algorithm partition(A, lo, hi) is\n        pivot := A[hi]\n        i := lo\n        for j := lo to hi do\n            if A[j] < pivot then\n                swap A[i] with A[j]\n                i := i + 1\n        swap A[i] with A[hi]\n        return i\n        `), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"For more information, please refer to\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/Quicksort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \" Wikipedia.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/Hoixgm4-P4M\",\n    title: \"YouTube video player\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default QuickSort;","map":{"version":3,"sources":["E:/codefield/csc301/visualize_sorter_react/src/component/QuickSort.js"],"names":["React","Badge","Button","Card","Navbar","Nav","Container","Row","Col","QuickSort"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,GAPF,EAQEC,GARF,QASO,iBATP;;AAWA,SAASC,SAAT,GAAqB;AACnB,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uOAHF,eASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oNAVF,eAeE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;;;;;;;;;;;;;;;;SADJ,CAjBF,eAoCE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAEE;AAAG,IAAA,IAAI,EAAC,yCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CApCF,eAwCE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCF,eAyCE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzCF,eA0CE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,MAAM,EAAC,KAFT;AAGE,IAAA,GAAG,EAAC,2CAHN;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,WAAW,EAAC,GALd;AAME,IAAA,KAAK,EAAC,sGANR;AAOE,IAAA,eAAe,MAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1CF,CADF;AAwDD;;AAED,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\n\r\n// react-bootstrap components\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nfunction QuickSort() {\r\n  return (\r\n    <>\r\n      <div className=\"title\">Quick Sort &Theta;(nlogn)&#8612;(Average)</div>\r\n      <hr></hr>\r\n      <div className=\"para\">\r\n        Quicksort is a divide-and-conquer algorithm. It works by selecting a\r\n        'pivot' element from the array and partitioning the other elements into\r\n        two sub-arrays, according to whether they are less than or greater than\r\n        the pivot.\r\n      </div>\r\n      <div className=\"para\">&nbsp;</div>\r\n      <div className=\"para\">\r\n        For this reason, it is sometimes called partition-exchange sort. The\r\n        sub-arrays are then sorted recursively. This can be done in-place,\r\n        requiring small additional amounts of memory to perform the sorting.\r\n      </div>\r\n      <div className=\"para\">&nbsp;</div>\r\n      <div className=\"para\">Pseudo-code:</div>\r\n      <pre>\r\n        {`\r\n        algorithm quicksort(A, lo, hi) is\r\n        if lo < hi then\r\n            p := partition(A, lo, hi)\r\n            quicksort(A, lo, p - 1)\r\n            quicksort(A, p + 1, hi)\r\n\r\n        algorithm partition(A, lo, hi) is\r\n        pivot := A[hi]\r\n        i := lo\r\n        for j := lo to hi do\r\n            if A[j] < pivot then\r\n                swap A[i] with A[j]\r\n                i := i + 1\r\n        swap A[i] with A[hi]\r\n        return i\r\n        `}\r\n      </pre>\r\n      <div className=\"para\">\r\n        For more information, please refer to\r\n        <a href=\"https://en.wikipedia.org/wiki/Quicksort\"> Wikipedia.</a>\r\n      </div>\r\n      <div className=\"para\">&nbsp;</div>\r\n      <div className=\"para\">&nbsp;</div>\r\n      <div className=\"cc\">\r\n        <iframe\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src=\"https://www.youtube.com/embed/Hoixgm4-P4M\"\r\n          title=\"YouTube video player\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen\"\r\n          allowFullScreen\r\n        ></iframe>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuickSort;\r\n"]},"metadata":{},"sourceType":"module"}